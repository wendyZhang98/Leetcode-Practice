### Difficult Level: Easy
### Link: https://practice.geeksforgeeks.org/problems/non-repeating-element3958/1



### Description:
# Find the first non-repeating element in a given array arr of N integers.
# Note: Array consists of only positive and negative integers and not zero.

# Example 1:
# Input : arr[] = {-1, 2, -1, 3, 2}
# Output : 3
# Explanation:
# -1 and 2 are repeating whereas 3 is 
# the only number occuring once.
# Hence, the output is 3. 

# Example 2:
# Input : arr[] = {1, 1, 1}
# Output : 0



### useful functions for dictionary
http://c.biancheng.net/view/2212.html



### Solution:
class Solution:
    def firstNonRepeating(self, arr, n): 
        mp = {}
      
        # Insert all array elements in hash table  
        for i in range(n): 
            if mp.get(arr[i], None):
              mp[arr[i]] += 1
            else:
              mp.setdefault(arr[i], 1)
      
        # Traverse array again and return  
        # first element with count 1.  
        for i in range(n): 
            if mp[arr[i]] == 1: 
                return arr[i] 
        return 0

print(Solution().firstNonRepeating(arr=[-1, 2, -1, 3, 2], n=5))
