### Difficult Level: Easy
### Link: https://practice.geeksforgeeks.org/problems/find-duplicates-in-an-array/1




### Description:
# Given an array a[] of size N which contains elements from 0 to N-1
# you need to find all the elements occurring more than once in the given array




### Example: 
# Example 1:
# Input:
# N = 4
# a[] = {0,3,1,2}
# Output: -1
# Explanation: N=4 and all elements from 0
# to (N-1 = 3) are present in the given
# array. Therefore output is -1.

# Example 2:
# Input:
# N = 5
# a[] = {2,3,1,2,3}
# Output: 2 3 
# Explanation: 2 and 3 occur more than once
# in the given array.


### Solution:
from collections import Counter

class Solution:
  def findDuplicates(self, nums):
    count = Counter(nums)
    nums.clear()
    return list([i for i in count if count[i] > 1])

print(Solution().findDuplicates(nums=[1,4,2,4,3]))


### Solution2:
### Time Complexity:
### Link: https://leetcode-cn.com/problems/find-all-duplicates-in-an-array/solution/shu-zu-zhong-zhong-fu-de-shu-jian-dan-bi-utnm/

def findDuplicates(nums):
    if not nums: 
      return []
    
    res=[]
    n = len(nums)

    for i in range(n):
        num = abs(nums[i])
        if nums[num-1] < 0:
            res.append(num)
        else:
            nums[num-1] = -nums[num-1]
    return res
