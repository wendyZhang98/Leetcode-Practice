### Difficult Level: Easy
### Link: https://practice.geeksforgeeks.org/problems/first-repeating-element4018/1




### Description:
# Given an array arr[] of size n
# find the first repeating element
# The element should occurs more than once 
# and the index of its first occurrence should be the smallest.
 



### Example:
# Example 1:
# Input:
# n = 7
# arr[] = {1, 5, 3, 4, 3, 5, 6}
# Output: 2
# Explanation: 
# 5 is appearing twice and 
# its first appearence is at index 2 
# which is less than 3 whose first 
# occuring index is 3.

# Example 2:
# Input:
# n = 4
# arr[] = {1, 2, 3, 4}
# Output: -1
# Explanation: 
# All elements appear only once so 
# answer is -1.




### Solution:
class Solution:
    def firstRepeated(self, arr, n):
        ans = 9999999999999
        d = dict()

        for i,e in enumerate(arr):
            if e in d:
                if d[e] < ans and ans != -1:
                    ans = d[e]
            else:
                d[e] = i
                
        if ans != 9999999999999:
            return ans+1
        else:
            return -1

print(Solution().firstRepeated(arr=[1, 5, 3, 4, 3, 5, 6], n=7))
